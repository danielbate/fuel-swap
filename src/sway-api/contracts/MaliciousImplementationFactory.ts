/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.97.2
  Forc version: 0.66.5
  Fuel-Core version: 0.40.1
*/

import { ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions } from "fuels";

import { MaliciousImplementation } from "./MaliciousImplementation";

const bytecode = decompressBytecode("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");

export class MaliciousImplementationFactory extends ContractFactory<MaliciousImplementation> {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(
      bytecode,
      MaliciousImplementation.abi,
      accountOrProvider,
      MaliciousImplementation.storageSlots
    );
  }

  static deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ) {
    const factory = new MaliciousImplementationFactory(wallet);
    return factory.deploy(options);
  }
}
